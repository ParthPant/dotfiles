{
  "_from": "coc-clangd@0.4.13",
  "_id": "coc-clangd@0.4.13",
  "_inBundle": false,
  "_integrity": "sha512-RiB7jNkjZgf0vvWPr4dzUjFLRgG9VHD95iYU9BP515YLnLeJ3d1IvoJdBpvG0Moq+yE3zN+BGtkzqpdLd+C61g==",
  "_location": "/coc-clangd",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "coc-clangd@0.4.13",
    "name": "coc-clangd",
    "escapedName": "coc-clangd",
    "rawSpec": "0.4.13",
    "saveSpec": null,
    "fetchSpec": "0.4.13"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/coc-clangd/-/coc-clangd-0.4.13.tgz",
  "_shasum": "a0e510fe710993cbf1b6702b337085398f8fea59",
  "_spec": "coc-clangd@0.4.13",
  "_where": "/home/parthp/.config/coc/extensions",
  "activationEvents": [
    "onLanguage:c",
    "onLanguage:cpp",
    "onLanguage:cuda",
    "onLanguage:objc",
    "onLanguage:objcpp",
    "onLanguage:arduino",
    "onLanguage:objective-c",
    "onLanguage:objective-cpp",
    "workspaceContains:**/compile_commands.json",
    "workspaceContains:**/compile_flags.txt"
  ],
  "author": {
    "name": "Heyward Fann",
    "email": "fannheyward@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/clangd/coc-clangd/issues"
  },
  "bundleDependencies": false,
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-clangd configuration",
      "properties": {
        "clangd.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable coc-clangd extension"
        },
        "clangd.disableDiagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Disable diagnostics from clangd"
        },
        "clangd.disableSnippetCompletion": {
          "type": "boolean",
          "default": false,
          "description": "Disable completion snippet from clangd"
        },
        "clangd.compilationDatabasePath": {
          "type": "string",
          "default": "",
          "description": "Specifies the directory containing the compilation database"
        },
        "clangd.path": {
          "type": "string",
          "default": "clangd",
          "description": "The path to clangd executable, e.g.: /usr/bin/clangd"
        },
        "clangd.arguments": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Arguments for clangd server"
        },
        "clangd.fallbackFlags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Extra clang flags used to parse files when no compilation database is found."
        },
        "clangd.semanticHighlighting": {
          "type": "boolean",
          "default": false,
          "description": "Enable semantic highlighting in clangd, requires jackguo380/vim-lsp-cxx-highlight to work"
        },
        "clangd.showDBChangedNotification": {
          "type": "boolean",
          "default": true,
          "description": "Show notifications while DB files changed"
        },
        "clangd.checkUpdates": {
          "type": "boolean",
          "default": false,
          "description": "Check for clangd language server updates on startup."
        },
        "suggest.detailMaxLength": {
          "type": "number",
          "description": "Max length of detail that should be shown in popup menu.",
          "default": 50
        },
        "diagnostic.format": {
          "type": "string",
          "description": "Define the diagnostic format. Available parts: source, code, severity, message",
          "default": "%message\n[%source:%code]"
        }
      }
    },
    "commands": [
      {
        "command": "clangd.switchSourceHeader",
        "title": "Switch between source/header"
      },
      {
        "command": "clangd.symbolInfo",
        "title": "Resolve symbol info under the cursor"
      },
      {
        "command": "clangd.install",
        "title": "Install latest clangd language server binary release"
      },
      {
        "command": "clangd.update",
        "title": "Check for updates to clangd language server"
      }
    ]
  },
  "deprecated": false,
  "description": "clangd extension for coc.nvim",
  "devDependencies": {
    "@clangd/install": "^0.1.3",
    "@types/node": "^14.0.27",
    "@types/which": "^1.3.2",
    "@typescript-eslint/eslint-plugin": "^3.7.1",
    "@typescript-eslint/parser": "^3.7.1",
    "coc.nvim": "^0.0.77",
    "eslint": "^7.5.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "husky": "^4.2.5",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.1",
    "ts-loader": "^8.0.1",
    "typescript": "^3.9.7",
    "vscode-languageserver-protocol": "^3.15.3",
    "webpack": "^4.44.0",
    "webpack-cli": "^3.3.12"
  },
  "engines": {
    "coc": "^0.0.70"
  },
  "homepage": "https://github.com/clangd/coc-clangd#readme",
  "husky": {
    "hooks": {
      "pre-push": "yarn lint"
    }
  },
  "keywords": [
    "coc.nvim"
  ],
  "license": "Apache-2.0 WITH LLVM-exception",
  "main": "lib/index.js",
  "name": "coc-clangd",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/clangd/coc-clangd.git"
  },
  "scripts": {
    "build": "webpack",
    "clean": "rimraf lib",
    "lint": "eslint src --ext ts",
    "prepare": "npm-run-all clean build",
    "watch": "webpack --watch"
  },
  "version": "0.4.13"
}
